const Discord = require('discord.js');
const Config = require('./config');
const client = new Discord.Client();
const prefix = '!';
const BDpref = '^';

var guild;
var BDchnl = `833225101218152459`;
var dopBDmsg = `833260237481705502`;

client.on('ready', () => {
    console.log(`${client.user.tag} ready!`);
    guild = client.guilds.cache.get('814795850885627964');

    let offlinemember = guild.members.cache.filter(m => m.presence.status === 'offline').size;
    let member = guild.memberCount;
    let onlinemember = member - offlinemember - 1;

    if (onlinemember > 0){
      client.user.setPresence({
        status: "online",
        activity: {
            name: `–Ω–∞ ${onlinemember} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!`,
            type: "WATCHING",
        }
      });
    }else if (onlinemember == 0){
      client.user.setPresence({
        status: "idle",
        activity: {
            name: `–≤ –ø—É—Å—Ç–æ—Ç—É.`,
            type: "WATCHING",
        }
      });
    }
});

client.on('presenceUpdate', (om,nm) => {
    let offlinemember = guild.members.cache.filter(m => m.presence.status === 'offline').size;
    let member = guild.memberCount;
    let onlinemember = member - offlinemember - 1;

    if (onlinemember > 0){
      client.user.setPresence({
        status: "online",
        activity: {
            name: `–Ω–∞ ${onlinemember} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!`,
            type: "WATCHING",
        }
      });
    }else if (onlinemember == 0){
      client.user.setPresence({
        status: "idle",
        activity: {
            name: `–≤ –ø—É—Å—Ç–æ—Ç—É.`,
            type: "WATCHING",
        }
      });
    }
});

function member(nick, name, money, status, car, user, steamID) {
    this.nick = nick;
    this.name = name;
    this.money = money;
    this.status = status;
    this.car = car;
    this.user = user;
    this.steamID = steamID;
};

async function GetStats() {
    let channel = client.channels.cache.get(BDchnl); //–ø–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞—à–∞ –ë–î
    let oMsg = await channel.messages.fetch(dopBDmsg);
    let nMsg = oMsg.content.split('\n');
    let fMsg = nMsg[nMsg.length-1].split(BDpref);
    if (fMsg[0] == ''){
        fMsg.splice(0,1);
    };
    let msg = await channel.messages.fetch(fMsg[0]); //–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –ø–æ–ª—É—á–∞—è –æ –Ω–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ.
    try{
        mainArray = []; //–∑–∞–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ X
        let messageNormal = msg.content.split('\n'); //–º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–±–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ (\n)
        messageNormal.splice(0,1); //—É–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ë–î.
        for(let msg of messageNormal){ //–ø–µ—Ä–µ–±–µ—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∑–∞–¥–∞–µ–º –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é msg
            let split = msg.split(BDpref); //—Ä–∞–∑–¥–µ–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –¥–≤–æ–µ—Ç–æ—á–∏—è–º, –∑–∞–¥–∞–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é split
            if (split[0] != ''){ //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ï—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–æ–π, —Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–∑–¥–µ–ª–µ–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ X
                mainArray.push(split);
            }else{
                split.splice(0,1); //–ï—Å–ª–∏ –ø—É—Å—Ç–æ–π, —Ç–æ —É–¥–∞–ª—è–µ–º –ø—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç –∏ –¥–µ–ª–∞–µ–º —Ç—É-–∂–µ –æ–ø–µ—Ä–∞—Ü–∏—é.
                mainArray.push(split);
            }
        };
        membersArray = []; //–∑–∞–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        for(let i of mainArray){ //–ø–µ—Ä–µ–±–µ—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ X —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Ö –≤ –æ–±—ä–µ–∫—Ç member, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            var newMember = new member(i[0], i[1], i[2], i[3], i[4], i[5], i[6]);
            membersArray.push(newMember);
        };
        //resolve();
        return membersArray; //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    }catch{
        return null;
    };
};

async function SetStats(nick, money, status, car, user, steamID) {
    let channel = client.channels.cache.get(BDchnl); //–ø–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞—à–∞ –ë–î
    let oMsg = await channel.messages.fetch(dopBDmsg); //–ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ø –±–¥
    let nMsg = oMsg.content.split('\n'); //—Ä–∞–∑–¥–µ–ª—è–µ–º –¥–æ–ø –±–¥ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    let fMsg = nMsg[nMsg.length-1].split(BDpref); //–ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –¥–æ–ø –±–¥
    if (fMsg[0] == ''){
        fMsg.splice(0,1);
    };
    let msg = await channel.messages.fetch(fMsg[0]); //–ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é, –ø–æ–ª—É—á–∞—è –æ –Ω–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ.
    try{
        if ((`${msg.content}\n${BDpref}${nick}${BDpref}${money}${BDpref}${status}${BDpref}${car}${BDpref}${user}${BDpref}${steamID}`).length < 2000){ //–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω—å—à–µ –ª–∏–º–∏—Ç–∞, —Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –µ–≥–æ –∏ –¥–æ–ø–æ–æ–Ω—è–µ–º –ë–î
            let nnMsg = msg.content.split('\n').slice(1);
            nnMsg.push(`${BDpref}${nick}${BDpref}${money}${BDpref}${status}${BDpref}${car}${BDpref}${user}${BDpref}${steamID}`);
            console.log(nnMsg.join('\n'));
            msg.edit(`> **–ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ${fMsg[1]}**\n`+nnMsg.join('\n'));
            return;
        }else if ((`${msg.content}\n${BDpref}${nick}${BDpref}${money}${BDpref}${status}${BDpref}${car}${BDpref}${user}${BDpref}${steamID}`).length >= 2000){ //–µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç
            channel.send(`> **–ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ${fMsg[1]}**`).then(msg => { //–ø–∏—à–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                oMsg.edit(oMsg.content + `\n${BDpref}${msg.id}${BDpref}${nMsg.length}`) //–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –¥–æ–ø.–ë–î id –∏ –Ω–æ–º–µ—Ä –Ω–æ–≤–æ–≥–æ –ë–î.
            });
        };
    }catch{
        return null;
    };
};

function FindStats(stat, value){

};

async function Stats(){

};

function sendLog(message,cat,act,status,add){
    let img = `https://i.imgur.com/cjSSwtu.png`;
    if (status == '–£—Å–ø–µ—à–Ω–æ') img = `https://i.imgur.com/cjSSwtu.png`;
    if (status == '–û—à–∏–±–∫–∞') img = `https://i.imgur.com/utuBexR.png`;

    let color = 11645371; 
    if (cat == '–ê–¥–º–∏–Ω') color = 4105807;
    if (cat == '–ì–ª–æ–±–∞–ª—å–Ω–æ–µ') color = 14560833;
    if (cat == '–û–±—â–µ–µ') color = 11645371;

    if (add.slice(0,1) == prefix) act = '–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π.';

    if(Object.values(Config.BLChannelsID).find(chl => chl == message.channel.id) == null){
        client.channels.cache.get(Config.BLChannelsID.logsId).send({embed: {
            color: color,
            author: {
                name: message.author.username,
                icon_url: message.author.avatarURL()
            },
            thumbnail: {
                url: img
            },
            title: `[${cat}] ${act}`,
            fields: [{
                name: `–î–æ–ø–æ–ª—å–Ω–∏—Ç–µ–ª—å–Ω–æ:`,
                value: `${add}\n[<#${message.channel.id}>]`
            }],
            
            timestamp: new Date()
            }
        });
        return;
    }else{
        return;
    }
};

function comand(message,countS){

    if (countS == undefined) countS = 0;
    let msg = message.content;
    if(msg.slice(0,1) != prefix) return false;
    
    let com = msg.split(" ", 1).join('').slice(prefix.length);
    let arg = msg.slice(com.length+prefix.length+1);
    let sarg = arg.split(" ");
    let carg = sarg.slice(countS).join(' ');

    var comand = {
        com: com,
        arg: arg,
        sarg: sarg,
        carg: carg
    };

    return comand;
};

client.on('messageDelete', (message) => {
    sendLog(message,'–û–±—â–µ–µ',`–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ`,'–£—Å–ø–µ—à–Ω–æ',`–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${message.content}`)
});

client.on('message', message => {
    let mb = message.author.bot;

    sendLog(message,`–û–±—â–µ–µ`,`–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.`,`–£—Å–ø–µ—à–Ω–æ`,`${message.content}`);

    if (message.channel.id == '831827280379641866'){
        message.channel.messages.fetch().then(msg => {
            let msgBot = msg.find(msgs => msgs.author.id == `822500483826450454`);
            if (msgBot != undefined){
                message.edit(`üì© –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ: https://discord.com/channels/814795850885627964/831827280379641866/${msgBot.id}\n`+message.content);
            }else if (comand(message).com == `send`){
                console.log(`${message.author.tag} —Å–æ–∑–¥–∞–ª –æ–±—Å—É–∂–¥–µ–Ω–∏–µ.`);
            }else{
                message.delete();
            }
        })
    };

    if (comand(message).com == '–æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è' && mb == false){
        message.delete();
        let homestreet = Config.street.find(st => st.name.toLowerCase() == message.channel.parent.name.toLowerCase());

        if(message.channel.name == "—É–ª–∏—Ü–∞"){   
            let objects = [];

            for (let pobj of homestreet.objects) if (pobj.addCondition == '') objects.push(pobj.name);

            if (homestreet != null && objects.join(', ') != ''){
                message.author.send(`–°–æ—Å–µ–¥–Ω–∏–µ —É–ª–∏—Ü—ã —Å ${homestreet.name}: ${homestreet.radius.join(', ')}.\n–ë–ª–∏–∂–∞–π—à–∏–µ –æ–±—ä–µ–∫—Ç—ã: ${objects.join(', ')}.`);
                sendLog(message,`–û–±—â–µ–µ`,`–û—Å–º–æ—Ç—Ä–µ–ª—Å—è –Ω–∞ —É–ª–∏—Ü–µ.`,`–£—Å–ø–µ—à–Ω–æ`,`–í—ã–≤–æ–¥: –°–æ—Å–µ–¥–Ω–∏–µ —É–ª–∏—Ü—ã —Å ${homestreet.name}: ${homestreet.radius.join(', ')}.\n–ë–ª–∏–∂–∞–π—à–∏–µ –æ–±—ä–µ–∫—Ç—ã: ${objects.join(', ')}.`);
            }else{
                message.author.send(`–°–æ—Å–µ–¥–Ω–∏–µ —É–ª–∏—Ü—ã —Å ${homestreet.name}: ${homestreet.radius.join(', ')}.\n–ë–ª–∏–∂–∞–π—à–∏–µ –æ–±—ä–µ–∫—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`);
                sendLog(message,`–û–±—â–µ–µ`,`–û—Å–º–æ—Ç—Ä–µ–ª—Å—è –Ω–∞ —É–ª–∏—Ü–µ.`,`–£—Å–ø–µ—à–Ω–æ`,`–í—ã–≤–æ–¥: –°–æ—Å–µ–¥–Ω–∏–µ —É–ª–∏—Ü—ã —Å ${homestreet.name}: ${homestreet.radius.join(', ')}.\n–ë–ª–∏–∂–∞–π—à–∏–µ –æ–±—ä–µ–∫—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`);
            };
        }else if(homestreet.objects.filter(ob => ob.addCondition.toLowerCase() == message.channel.name.toLowerCase()) != null){
            let objects = [];

            for (let pobj of homestreet.objects) if (pobj.addCondition.toLowerCase() == message.channel.name.toLowerCase()) objects.push(pobj.name);

            if (homestreet != null && objects.join(', ') != ''){
                message.author.send(`–ë–ª–∏–∂–∞–π—à–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è: ${objects.join(', ')}.`);
                sendLog(message,`–û–±—â–µ–µ`,`–û—Å–º–æ—Ç—Ä–µ–ª—Å—è –≤ –æ–±—ä–µ–∫—Ç–µ.`,`–£—Å–ø–µ—à–Ω–æ`,`–í—ã–≤–æ–¥: –ë–ª–∏–∂–∞–π—à–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è: ${objects.join(', ')}.`);
            }else{
                message.author.send(`–ë–ª–∏–∂–∞–π—à–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`);
                sendLog(message,`–û–±—â–µ–µ`,`–û—Å–º–æ—Ç—Ä–µ–ª—Å—è –≤ –æ–±—ä–µ–∫—Ç–µ.`,`–£—Å–ø–µ—à–Ω–æ`,`–í—ã–≤–æ–¥: –ë–ª–∏–∂–∞–π—à–∏–µ –ø–æ–º–µ—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.`);
            };
        }else{
            message.author.send(`–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã \`–æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è\` –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è –Ω–∞ —É–ª–∏—Ü–∞—Ö –∏–ª–∏ –≤–Ω—É—Ç—Ä–∏ –ø–æ–º–µ—â–µ–Ω–∏–π.`);
            sendLog(message,`–û–±—â–µ–µ`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è –æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è.`,`–û—à–∏–±–∫–∞`,`–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã \`–æ—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è\` –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è –Ω–∞ —É–ª–∏—Ü–∞—Ö –∏–ª–∏ –≤–Ω—É—Ç—Ä–∏ –ø–æ–º–µ—â–µ–Ω–∏–π.`);
        };
    };

    if (comand(message).com == '–∏–¥—Ç–∏' && mb == false){
        message.delete();
        let homestreet = Config.street.find(st => st.name == message.channel.parent.name);

        if (comand(message).sarg[0] == '–Ω–∞' && message.channel.name == '—É–ª–∏—Ü–∞'){
            let walkway = homestreet.radius.find(st => st.toLowerCase() == comand(message).arg);

            if (walkway != null && message.channel.parent.permissionOverwrites.get(message.author.id) != null){
                let cat = client.channels.cache.find(cat => cat.name == walkway);
                if (cat.type == 'category'){
                    client.channels.cache.find(cat => cat.name == walkway).updateOverwrite(message.author, { VIEW_CHANNEL: true });
                    message.channel.parent.permissionOverwrites.get(message.author.id).delete();
                    sendLog(message,`–û–±—â–µ–µ`,`–ü–æ—à–µ–ª.`,`–£—Å–ø–µ—à–Ω–æ`,`–ü–µ—Ä–µ—à–µ–ª —Å ${homestreet.name} –Ω–∞ ${walkway}.`);
                };
            }else if (walkway == null && Config.street.find(st => st.name.toLowerCase() == comand(message).arg) != null){
                message.author.send(`${comand(message).arg} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Å–µ–¥–Ω–µ–π —É–ª–∏—Ü–µ–π —Å ${homestreet.name}.`);
                sendLog(message,`–û–±—â–µ–µ`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–π—Ç–∏.`,`–û—à–∏–±–∫–∞`,`–í—ã–≤–æ–¥: ${comand(message).arg} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Å–µ–¥–Ω–µ–π —É–ª–∏—Ü–µ–π —Å ${homestreet.name}.`);
            }else{
                message.author.send(`–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ —É–ª–∏—Ü—ã ${comand(message).arg} –Ω–µ—Ç, –ª–∏–±–æ –≤—ã –≤–≤–µ–ª–∏ –µ–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.`);
                sendLog(message,`–û–±—â–µ–µ`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–π—Ç–∏.`,`–û—à–∏–±–∫–∞`,`–í—ã–≤–æ–¥: –í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ —É–ª–∏—Ü—ã ${comand(message).arg} –Ω–µ—Ç, –ª–∏–±–æ –≤—ã –≤–≤–µ–ª–∏ –µ–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.`);
            };
        }else if (comand(message).sarg[0] == '–≤'){
            let walkway = homestreet.objects.find(st => st.name.toLowerCase() == comand(message).arg);
        }else{
            message.author.send(`–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã \`–∏–¥—Ç–∏\` –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: –Ω–∞ - –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —É–ª–∏—Ü—É –∏–ª–∏ –≤ - –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–µ/–æ–±—ä–µ–∫—Ç.`);
            sendLog(message,`–û–±—â–µ–µ`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è –ø–æ–π—Ç–∏.`,`–û—à–∏–±–∫–∞`,`–í—ã–≤–æ–¥: –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã \`–∏–¥—Ç–∏\` –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏: –Ω–∞ - –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —É–ª–∏—Ü—É –∏–ª–∏ –≤ - –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø–æ–º–µ—â–µ–Ω–∏–µ/–æ–±—ä–µ–∫—Ç.`);
        }
    };

    if(comand(message).com == `send` && message.author.id == `621917381681479693`){	
        if(mb) return;	
        message.delete();	
        message.channel.send(`${comand(message).arg}`);	
    };

    if(comand(message).com == `clear` && mb == false && message.guild.member(message.author).roles.cache.get(`822493460493500436`) != null){
        let arg = parseInt(comand(message).sarg[0]);
        
        if (arg > 0 && arg < 100){
            message.channel.bulkDelete(arg+1, true);
            sendLog(message,`–ê–¥–º–∏–Ω`,`–£–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è.`,`–£—Å–ø–µ—à–Ω–æ`,`–£–¥–∞–ª–µ–Ω–æ ${arg} —Å–æ–æ–±—â–µ–Ω–∏–π.`);
        }else if (arg >= 100){
            sendLog(message,`–ê–¥–º–∏–Ω`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.`,`–û—à–∏–±–∫–∞`,`–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –±–æ–ª–µ–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π.`);
        }else{
            sendLog(message,`–ê–¥–º–∏–Ω`,`–ü–æ–ø—ã—Ç–∞–ª—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.`,`–û—à–∏–±–∫–∞`,`–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç.`);
        };
    };
    
    if(comand(message).com == `edit` && message.author.id == `621917381681479693`){
        message.delete();
        message.channel.guild.channels.cache.find(id => id == `${comand(message).sarg[0]}`).messages.fetch(`${comand(message).sarg[1]}`)
        .then(msg =>{

            if(!msg.author.bot) return;
            msg.edit(comand(message,2).carg);
        
        })
        .catch(console.error);
    };

    if(comand(message).com == `sbd` && guild.member(message.author).roles.cache.get(`822493460493500436`) != null){
        message.delete();
    };

});

client.login(process.env.BOT_TOKEN);